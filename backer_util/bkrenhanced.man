.\" Copyright (c) 2001 Kipp Cannon (kcannon@users.sourceforge.net)
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139,
.\" USA.
.\"
.TH BKRENHANCED 8 "December 30, 2001" "Linux" "Backer"
.SH NAME
bkrenhanced \- Backer enhanced redundancy filter.
.SH SYNOPSIS
\fBbkrenhanced\fP [\fB\-f\fP [\fIdevname\fP]] [\fB\-h\fP] [\fB\-u\fP]
.SH DESCRIPTION
\fBbkrenhanced\fP is a filter for providing additional error control coding
for the
.IR backer (4)
device driver.  It works in conjunction with the driver's own error
correction abilities in order to implement a burst error correcting system
capable of handling entire lost sectors.  This can be used simply to
provide extra peice of mind but, in particular, it should allow data to be
reliably recorded in EP (extended play) mode.
.PP
\fBbkrenhanced\fP converts the data stream into ``groups'' of 255 sectors
which, in addition to file data, also contain parity information.  The
parity information allows each group to be fully recovered even when some
number of its constituent sectors have been completely lost.
.PP
The error-control code used is a Reed-Solomon code.  Reed-Solomon codes
require two parity bytes for each byte that needs to be corrected
\fIunless\fP it is known by some other means which byte is bad in which
case only one parity byte is required in order to correct each bad byte.
.PP
The power of \fBbkrenhanced\fP comes from the fact that the driver itself
implements error control within each sector.  The driver's error control
code is able to correct the vast majority of tape noise so the driver feeds
essentially error-free sectors to \fBbkrenhanced\fP during playback.  When
a sector is lost (eg. due to tape noise or a buffer overrun), the driver
almost always detects the problem and indicates the loss of the sector to
user space.  This information is then used by \fBbkrenhanced\fP to inform
its own Reed-Solomon decoder of the locations of bad bytes in each group of
sectors.  The combination of sector-level and group-level error control
codes makes for very efficient use of bandwidth.
.SS OPTIONS
.TP
\fB\-f\fP [\fIdevname\fP]
Retrieve the mode to use from a Backer device file.  If \fIdevname\fP is
provided then that file is used, otherwise the mode is retrieved from
\fBDEVICE_NAME\fP.  Note that if this option is omitted altogether then the
mode will be retrieved from
.IR stdin (3)
or
.IR stdout (3)
when decoding or encoding respectively.
.TP
\fB\-h\fP
Print a usage message.
.TP
\fB\-u\fP
``Unencode''.  Extract file data from an enhanced redundancy data stream.
.SH EXAMPLES
To apply enhanced redundancy to a recording, simply run the data through
\fBbkrenhanced\fP.  All the necessary format information will be retrieved
from the device file.  For example, to make a high density NTSC EP format
recording type
.RS 3
.sp
\fB$\fP bkrenhanced < \fIfilename\fP > /dev/backer/0/nhe
.sp
.RE
and to retrieve it type
.RS 3
.sp
\fB$\fP bkrenhanced -u < /dev/backer/0/nhe > \fIfilename\fP
.sp
.RE
.SH NOTES
If data is recorded to tape using \fBbkrenhanced\fP, then it must be
recovered using \fBbkrenhanced\fP as well.  The parity information added to
the data stream must be removed to return the data to its original form.
.PP
\fBbkrenhanced\fP can really only be used directly with the device driver
since only in that way can it be provided with the \fB-ENODATA\fP error
codes needed for it's operation.  The device driver drops all irrecoverable
sectors from the data stream so the resulting output, if dumped to disk,
does not retain enough information to allow error correction to be
performed on it.
.SH "SEE ALSO"
.IR backer (4),
.IR bkrcheck (8),
.IR bkrencode (8),
.IR bkrmonitor (8)
.SH AUTHOR
Kipp Cannon (kcannon@users.sourceforge.net).
.SH AVAILABILITY
The most recent version of the driver and utilities can be found on
SourceForge at:
.RS
.sp
http://www.sourceforge.net/projects/linbacker
.sp
.RE
.TE
