.\" Copyright (c) 2001,2002 Kipp Cannon (kcannon@users.sourceforge.net)
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139,
.\" USA.
.\"
.TH BKRENCODE 8 "November 23, 2002" "Linux" "Backer"
.SH NAME
bkrencode \- Backer tape data processor.
.SH SYNOPSIS
\fBbkrencode\fP [\fB\-Dh\fP|\fB\-Dl\fP] [\fB\-Fe\fP|\fB\-Fs\fP]
[\fB\-Vn\fP|\fB\-Vp\fP] [\fB\-d\fP[\fBs\fP]] [\fB\-f\fP[\fIdevname\fP]]
[\fB\-h\fP] [\fB\-s\fP] [\fB-T\fP\fIformat_table\fP] [\fB\-t\fP]
[\fB\-u\fP] [\fB\-v\fP]
.SH DESCRIPTION
\fBbkrencode\fP is a user space implementation of the
.IR backer (4)
device driver's data processing functions.  It is a filter that reads data
from standard in and writes it to standard out.  It can either accept file
data and encode it into a byte stream suitable for being written directly
to tape or accept a raw byte stream recovered from tape and decode the file
data out of it.  The default is to encode file data to tape data.
\fBbkrencode\fP can also report the space required for a recording (either
the length of tape required or the disk space required depending on which
way the data is going).
.PP
There are three primary uses for \fBbkrencode\fP.  The first is to allow
slower systems to make full use of a Backer's high density modes by
removing the need to process the tape data stream in real time.  Tape data
can be prepared on disk ahead of time with \fBbkrencode\fP, then dumped to
tape via one of the ``raw'' device files.  To read a tape, the process is
reversed.  This, of course, requires enough free disk space to be available
to act as a buffer.
.PP
The second use of \fBbkrencode\fP is to allow tapes recorded with older
versions of the device driver to be recovered when the current version of
the driver cannot read the older format.  All that is required is the
version of \fBbkrencode\fP from the utilities package corresponding to the
older driver.
.PP
Finally, if given the \fB-t\fP option \fBbkrencode\fP will disable the
output of encoded/decoded data and instead print the size of the recording.
When encoding data, the duration of tape required for the recording is
displayed; when decoding a data stream, the number of bytes recovered is
displayed.
.PP
It is necessary to inform \fBbkrencode\fP of the desired output format when
encoding a tape data stream and, likewise, the format a data stream is in
that is to be decoded.  There are three ways in which \fBbkrencode\fP can
be told the format:  the format can be specified, piecewise, via individual
command line options; it can be obtained from a particular Backer device
file specified via a command line option; or it can be retrieved
automatically from
.IR stdout (3)
or
.IR stdin (3)
when encoding or decoding respectively.  The order of precedence is as
follows.  First, the command line arguements are processed in the order in
which they are given with later options overriding earlier ones.  After
processing the command line arguements, any components of the format that
are still unspecified are obtained by performing a format retrieval
.IR ioctl (2)
on
.IR stdout (3)
or
.IR stdin (3)
as appropriate.
.SS OPTIONS
.TP
\fB\-Dh\fP, \fB\-Dl\fP
The byte stream is formated for high density (\fBDh\fP) or low density
(\fBDl\fP).
.TP
\fB\-Fe\fP, \fB\-Fs\fP
The byte stream is formated for EP (\fBFe\fP) or SP (\fBFs\fP).
.TP
\fB\-Vn\fP, \fB\-Vp\fP
The byte stream is formated for NTSC video (\fBVn\fP) or PAL video
(\fBVp\fP).
.TP
\fB\-d\fP, \fB-ds\fP
While encoding or decoding a data stream, dump status information to
.IR stderr (3).
The information is presented in the same format as the device driver's
\fB/proc\fP interface and can be used as input to
.IR bkrmonitor (8).
Normally the status is written to
.IR stderr (3)
in non-blocking mode after each sector is transfered allowing the decoding
of the data stream to procede regardless of whether or not the recipient of
the status information is able to keep up.  If the \fB-ds\fP variant is
specified then the output is ``synchronous'' which causes decoding to block
until the status information has been read.  Depending on the execution
environment, this may result in a very large degredation in decoder
performance but ensures the correct operation of the status read-out
software.  NOTE:  the use of these options overrides the \fB-v\fP option in
order to prevent "verbosity" from confusing status information parsers.
.TP
\fB\-f\fP[\fIdevname\fP]
Retrieve the format to use for the byte stream from a Backer device file.
If \fIdevname\fP is provided then that file is used, otherwise the mode is
retrieved from \fB@DEFAULT_DEV@\fP.
.TP
\fB\-h\fP
Print a usage message.
.TP
\fB\-s\fP
When decoding, skip over bad sectors instead of aborting (mimics the
behaviour of the device driver).
.TP
\fB\-T\fP\fIformat_table\fP
Read a format parameter table from the file \fIformat_table\fP.  See
.IR backer (4)
for information on the format of this file.
.TP
\fB\-t\fP
Only compute and display the space required for a recording --- do not
output encoded or decoded data.
.TP
\fB\-u\fP
``Unencode''.  Extract file data from a tape data stream.
.TP
\fB\-v\fP
Be verbose.
.SH EXAMPLES
To save a file in short play high density NTSC mode using
\fBbkrencode\fP to process the data, type
.RS 3
.sp
\fB$\fP bkrencode -Vn -Dh -Fs < \fIfilename\fP > /dev/backer/0/nhr
.sp
.RE
and to retrieve it type
.RS 3
.sp
\fB$\fP bkrencode -u -Fs < /dev/backer/0/nhr > \fIfilename\fP
.sp
.RE
where this time we have also omited from the command line those parts of
the data format specifier that can be obtained from
.IR stdin (3).
To use \fBbkrencode\fP to allow
.IR tar (1)
to be used with high compression on a slow computer do something like
.RS 3
.sp
\fB$\fP tar -cjO \fIfiles...\fP | bkrencode -Vn -Dh -Fs > /tmp/tape.dat
.br
\fB$\fP cp /tmp/tape.dat /dev/backer/0/nhr
.sp
.RE
.SH NOTES
It is essential that \fBbkrencode\fP be set to a format appropriate for the
mode used to transfer the data to/from tape.  If, for example,
\fBbkrencode\fP is told to produce a PAL compatible data stream which is
then written to tape via an NTSC device file, it will not be possible to
recover any data from the resulting recording.
.SH "SEE ALSO"
.IR backer (4),
.IR bkrcheck (8),
.IR bkrenhanced (8),
.IR bkrmonitor (8)
.SH AUTHOR
Kipp Cannon (kcannon@users.sourceforge.net).
.SH AVAILABILITY
The most recent version of the driver and utilities can be found on
SourceForge at:
.RS
.sp
http://www.sourceforge.net/projects/linbacker
.sp
.RE
.TE
