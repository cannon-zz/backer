.\" Copyright (c) 2001 Kipp Cannon (kcannon@users.sourceforge.net)
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139,
.\" USA.
.\"
.TH bkrenhanced 8 "June 26, 2001" "Linux" "Backer"
.SH NAME
bkrenhanced \- Backer enhanced redundancy filter.
.SH SYNOPSIS
\fBbkrenhanced\fP [\fB\-D\fP \fBh\fP|\fBl\fP] [\fB\-F\fP \fBe\fP|\fBs\fP]
[\fB\-V\fP \fBn\fP|\fBp\fP] [\fB\-f\fP [\fIdevname\fP]] [\fB\-h\fP]
[\fB\-u\fP]
.SH DESCRIPTION
\fBbkrenhanced\fP is a filter for providing additional error control coding for
the
.IR backer (4)
device driver.  It works in conjunction with the driver's own error
correction abilities in order to implement a burst error correcting system
capable of handling entire lost sectors.  This hopefully allows data to be
reliably recorded in EP (extended play) mode.
.PP
File data is read by \fBbkrenhanced\fP in ``groups'' corresponding to 255
tape sector's worth of data.  Each group is divided into blocks and to each
block is added parity bytes so that, with parity bytes, each block's size
is 255 bytes.  The blocks are then interleaved so that every block
contributes exactly one byte to each sector in the group (notice that a
group contains as many sectors as there are bytes in each block).  The
result is that if a sector is lost on playback, it appears as nothing more
than a single bad byte in each block of the group which is easily handled
by the Reed-Solomon error correction code.
.PP
The power of this scheme comes from the fact that the driver itself
implements error control within each sector.  The driver's error control
code is able to handle the vast majority of tape noise meaning the driver
feeds essentially error-free sectors to \fBbkrenhanced\fP during playback.
When a sector is lost (eg. due to tape noise or even a buffer overrun), the
driver almost always detects the problem and signals user space with
\fB-ENODATA\fP.  The occurance of this result code is used by
\fBbkrenhanced\fP to inform its own Reed-Solomon decoder of the locations
of bad symbols in each block.  Knowing the locations of the errors doubles
the correction capacity of the error control code making for very efficient
use of bandwidth.
.PP
In normal use, \fBbkrenhanced\fP will be used directly with the device
driver and it will automatically retrieve the tape format parameters via an
.IR ioctl (2).
If \fBbkrenhanced\fP is not used with the driver directly then it will be
necessary to either specify the tape format with command line options or
give the name of a Backer device file to retrieve the format from.  There
is no compiled-in default mode.
.SS OPTIONS
.TP
\fB\-D\fP \fBh\fP|\fBl\fP
Set the density to format the data for to high (\fBh\fP) or low (\fBl\fP).
.TP
\fB\-F\fP \fBe\fP|\fBs\fP
Set the tape speed to format the data for to EP (\fBe\fP) or SP (\fBs\fP).
.TP
\fB\-V\fP \fBn\fP|\fBp\fP
Set the video mode to format the data for to NTSC (\fBn\fP) or PAL
(\fBp\fP).
.TP
\fB\-f\fP [\fIdevname\fP]
Retrieve the mode to use from a Backer device file.  If specified,
\fIdevname\fP is used, otherwise the mode is retrieved from
\fBDEVICE_NAME\fP.
.TP
\fB\-h\fP
Print a usage message.
.TP
\fB\-u\fP
``Unencode''.  Extract file data from an enhanced redundancy data stream.
.SH EXAMPLES
To apply enhanced redundancy to a recording, simply run the data through
\fBbkrenhanced\fP.  All the necessary format information will be retrieved
from the device file.  For example, to make a high density NTSC EP format
recording type
.RS 3
.sp
bkrenhanced < \fIfilename\fP > /dev/backer/0/nhe
.sp
.RE
and to retrieve it type
.RS 3
.sp
bkrenhanced -u < /dev/backer/0/nhe > \fIfilename\fP
.sp
.RE
.SH NOTES
It is essential that \fBbkrenhanced\fP be set to the same format as the
device driver otherwise the information provided by the driver regarding
the location of bad sectors will be misinterpreted and that would put
\fBbkrenhanced\fP's ability to be of any use at all in question.  For this
reason, it is recommended that the \fB-f\fP option \fInever\fP be used if
\fBbkrenhanced\fP is communicating directly with the device driver since
the format is most reliably retrieved directly from the driver.
.PP
If \fBbkrenhanced\fP is not communicating directly with the device driver
(if, for example, it is decoding data out of a file on disk) then it will
not have access to the \fBENODATA\fP markers from the sector decoder.  The
data stream can still be corrected but the number of lost sectors that can
be replaced in each sector group is reduced by a factor of 2 and overruns
cannot be corrected at all.
.PP
Finally, while the motivation for the development of \fBbkrenhanced\fP has
been the improvment of the reliability of EP recordings, it is perfectly
fine to use \fBbkrenhanced\fP with non-EP modes as well and the paranoid
may wish to do so for extra piece of mind.
.SH "SEE ALSO"
.IR backer (4),
.IR bkrcheck (8),
.IR bkrencode (8),
.IR bkrmonitor (8)
.SH AUTHOR
Kipp Cannon (kcannon@users.sourceforge.net).
.SH AVAILABILITY
The most recent version of the driver and utilities can be found on
SourceForge at:
.RS
.sp
http://www.sourceforge.net/projects/linbacker
.sp
.RE
.TE
